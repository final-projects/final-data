<?xml version="1.0" encoding="UTF-8" ?>
    <!--
  - Copyright 2020-2021 the original author or authors.
  -
  - Licensed under the Apache License, Version 2.0 (the "License");
  - you may not use this file except in compliance with the License.
  - You may obtain a copy of the License at
  -
  -      https://www.apache.org/licenses/LICENSE-2.0
  -
  - Unless required by applicable law or agreed to in writing, software
  - distributed under the License is distributed on an "AS IS" BASIS,
  - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  - See the License for the specific language governing permissions and
  - limitations under the License.
  -->
    <!ELEMENT mapper (cache-ref | cache | resultMap* | parameterMap* | sql* | insert* | update* | delete* | select* )+><!ATTLIST mappernamespace CDATA #IMPLIED>

    <!ELEMENT cache-ref EMPTY><!ATTLIST cache-refnamespace CDATA #REQUIRED>

    <!ELEMENT cache (property*)><!ATTLIST cachetype CDATA #IMPLIEDeviction CDATA #IMPLIEDflushInterval CDATA #IMPLIEDsize CDATA #IMPLIEDreadOnly CDATA #IMPLIEDblocking CDATA #IMPLIED>

    <!ELEMENT parameterMap (parameter+)?><!ATTLIST parameterMapid CDATA #REQUIREDtype CDATA #REQUIRED>

    <!ELEMENT parameter EMPTY><!ATTLIST parameterproperty CDATA #REQUIREDjavaType CDATA #IMPLIEDjdbcType CDATA #IMPLIEDmode (IN | OUT | INOUT) #IMPLIEDresultMap CDATA #IMPLIEDscale CDATA #IMPLIEDtypeHandler CDATA #IMPLIED>

    <!ELEMENT resultMap (constructor?,id*,result*,association*,collection*, discriminator?)><!ATTLIST resultMapid CDATA #REQUIREDtype CDATA #REQUIREDextends CDATA #IMPLIEDautoMapping (true|false) #IMPLIED>

    <!ELEMENT constructor (idArg*,arg*)>

    <!ELEMENT id EMPTY><!ATTLIST idproperty CDATA #IMPLIEDjavaType CDATA #IMPLIEDcolumn CDATA #IMPLIEDjdbcType CDATA #IMPLIEDtypeHandler CDATA #IMPLIED>

    <!ELEMENT result EMPTY><!ATTLIST resultproperty CDATA #IMPLIEDjavaType CDATA #IMPLIEDcolumn CDATA #IMPLIEDjdbcType CDATA #IMPLIEDtypeHandler CDATA #IMPLIED>

    <!ELEMENT idArg EMPTY><!ATTLIST idArgjavaType CDATA #IMPLIEDcolumn CDATA #IMPLIEDjdbcType CDATA #IMPLIEDtypeHandler CDATA #IMPLIEDselect CDATA #IMPLIEDresultMap CDATA #IMPLIEDname CDATA #IMPLIEDcolumnPrefix CDATA #IMPLIED>

    <!ELEMENT arg EMPTY><!ATTLIST argjavaType CDATA #IMPLIEDcolumn CDATA #IMPLIEDjdbcType CDATA #IMPLIEDtypeHandler CDATA #IMPLIEDselect CDATA #IMPLIEDresultMap CDATA #IMPLIEDname CDATA #IMPLIEDcolumnPrefix CDATA #IMPLIED>

    <!ELEMENT collection (constructor?,id*,result*,association*,collection*, discriminator?)><!ATTLIST collectionproperty CDATA #REQUIREDcolumn CDATA #IMPLIEDjavaType CDATA #IMPLIEDofType CDATA #IMPLIEDjdbcType CDATA #IMPLIEDselect CDATA #IMPLIEDresultMap CDATA #IMPLIEDtypeHandler CDATA #IMPLIEDnotNullColumn CDATA #IMPLIEDcolumnPrefix CDATA #IMPLIEDresultSet CDATA #IMPLIEDforeignColumn CDATA #IMPLIEDautoMapping (true|false) #IMPLIEDfetchType (lazy|eager) #IMPLIED>

    <!ELEMENT association (constructor?,id*,result*,association*,collection*, discriminator?)><!ATTLIST associationproperty CDATA #REQUIREDcolumn CDATA #IMPLIEDjavaType CDATA #IMPLIEDjdbcType CDATA #IMPLIEDselect CDATA #IMPLIEDresultMap CDATA #IMPLIEDtypeHandler CDATA #IMPLIEDnotNullColumn CDATA #IMPLIEDcolumnPrefix CDATA #IMPLIEDresultSet CDATA #IMPLIEDforeignColumn CDATA #IMPLIEDautoMapping (true|false) #IMPLIEDfetchType (lazy|eager) #IMPLIED>

    <!ELEMENT discriminator (case+)><!ATTLIST discriminatorcolumn CDATA #IMPLIEDjavaType CDATA #REQUIREDjdbcType CDATA #IMPLIEDtypeHandler CDATA #IMPLIED>

    <!ELEMENT case (constructor?,id*,result*,association*,collection*, discriminator?)><!ATTLIST casevalue CDATA #REQUIREDresultMap CDATA #IMPLIEDresultType CDATA #IMPLIED>

    <!ELEMENT property EMPTY><!ATTLIST propertyname CDATA #REQUIREDvalue CDATA #REQUIRED>

    <!ELEMENT typeAlias EMPTY><!ATTLIST typeAliasalias CDATA #REQUIREDtype CDATA #REQUIRED>

    <!ELEMENT select (#PCDATA | include | trim | where | set | foreach | choose | if | bind)*><!ATTLIST selectid CDATA #REQUIREDparameterMap CDATA #IMPLIEDparameterType CDATA #IMPLIEDresultMap CDATA #IMPLIEDresultType CDATA #IMPLIEDresultSetType (FORWARD_ONLY | SCROLL_INSENSITIVE | SCROLL_SENSITIVE | DEFAULT) #IMPLIEDstatementType (STATEMENT|PREPARED|CALLABLE) #IMPLIEDfetchSize CDATA #IMPLIEDtimeout CDATA #IMPLIEDflushCache (true|false) #IMPLIEDuseCache (true|false) #IMPLIEDdatabaseId CDATA #IMPLIEDlang CDATA #IMPLIEDresultOrdered (true|false) #IMPLIEDresultSets CDATA #IMPLIED>

    <!ELEMENT insert (#PCDATA | selectKey | include | trim | where | set | foreach | choose | if | bind)*><!ATTLIST insertid CDATA #REQUIREDparameterMap CDATA #IMPLIEDparameterType CDATA #IMPLIEDtimeout CDATA #IMPLIEDflushCache (true|false) #IMPLIEDstatementType (STATEMENT|PREPARED|CALLABLE) #IMPLIEDkeyProperty CDATA #IMPLIEDuseGeneratedKeys (true|false) #IMPLIEDkeyColumn CDATA #IMPLIEDdatabaseId CDATA #IMPLIEDlang CDATA #IMPLIED>

    <!ELEMENT selectKey (#PCDATA | include | trim | where | set | foreach | choose | if | bind)*><!ATTLIST selectKeyresultType CDATA #IMPLIEDstatementType (STATEMENT|PREPARED|CALLABLE) #IMPLIEDkeyProperty CDATA #IMPLIEDkeyColumn CDATA #IMPLIEDorder (BEFORE|AFTER) #IMPLIEDdatabaseId CDATA #IMPLIED>

    <!ELEMENT update (#PCDATA | selectKey | include | trim | where | set | foreach | choose | if | bind)*><!ATTLIST updateid CDATA #REQUIREDparameterMap CDATA #IMPLIEDparameterType CDATA #IMPLIEDtimeout CDATA #IMPLIEDflushCache (true|false) #IMPLIEDstatementType (STATEMENT|PREPARED|CALLABLE) #IMPLIEDkeyProperty CDATA #IMPLIEDuseGeneratedKeys (true|false) #IMPLIEDkeyColumn CDATA #IMPLIEDdatabaseId CDATA #IMPLIEDlang CDATA #IMPLIED>

    <!ELEMENT delete (#PCDATA | include | trim | where | set | foreach | choose | if | bind)*><!ATTLIST deleteid CDATA #REQUIREDparameterMap CDATA #IMPLIEDparameterType CDATA #IMPLIEDtimeout CDATA #IMPLIEDflushCache (true|false) #IMPLIEDstatementType (STATEMENT|PREPARED|CALLABLE) #IMPLIEDdatabaseId CDATA #IMPLIEDlang CDATA #IMPLIED>

    <!-- Dynamic -->

    <!ELEMENT include (property+)?><!ATTLIST includerefid CDATA #REQUIRED>

    <!ELEMENT bind (#PCDATA)*><!ATTLIST bindname CDATA #REQUIREDvalue CDATA #REQUIRED>

    <!ELEMENT sql (#PCDATA | include | trim | where | set | foreach | choose | if | bind)*><!ATTLIST sqlid CDATA #REQUIREDlang CDATA #IMPLIEDdatabaseId CDATA #IMPLIED>

    <!ELEMENT trim (#PCDATA | include | trim | where | set | foreach | choose | if | bind)*><!ATTLIST trimprefix CDATA #IMPLIEDprefixOverrides CDATA #IMPLIEDsuffix CDATA #IMPLIEDsuffixOverrides CDATA #IMPLIED><!ELEMENT where (#PCDATA | include | trim | where | set | foreach | choose | if | bind)*><!ELEMENT set (#PCDATA | include | trim | where | set | foreach | choose | if | bind)*>

    <!ELEMENT foreach (#PCDATA | include | trim | where | set | foreach | choose | if | bind)*><!ATTLIST foreachcollection CDATA #REQUIREDitem CDATA #IMPLIEDindex CDATA #IMPLIEDopen CDATA #IMPLIEDclose CDATA #IMPLIEDseparator CDATA #IMPLIED>

    <!ELEMENT choose (when* , otherwise?)><!ELEMENT when (#PCDATA | include | trim | where | set | foreach | choose | if | bind)*><!ATTLIST whentest CDATA #REQUIRED><!ELEMENT otherwise (#PCDATA | include | trim | where | set | foreach | choose | if | bind)*>

    <!ELEMENT if (#PCDATA | include | trim | where | set | foreach | choose | if | bind)*><!ATTLIST iftest CDATA #REQUIRED>


